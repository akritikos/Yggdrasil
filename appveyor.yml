version: 1.0.{build}
configuration:
  - Release
  - Debug
branches:
  only:
    - master
    - develop
image:
  - Visual Studio 2017
dotnet_csproj:
  patch: true
  file: '**\*.csproj'
  version: '{version}'
environment:
  USERNAME: akritikos-github
  PROJECT: Yggdrasil
  NAMESPACE: Kritikos.MachineLearning
  SONAR_BINARY: C:\ProgramData\chocolatey\lib\sonarscanner-msbuild-netcoreapp2.0\tools\SonarScanner.MSBuild.dll
  MSBUILDDISABLENODEREUSE: 1
  SONAR_REPO_TOKEN:
    secure: CtbKM8moLm+2uxfH/QxFxuX62y4RoQrfYtx2z8iRM1EhdwVBDwLq1ebxY0J02Xka
  GITHUB_REPO_TOKEN:
    secure: Kt8llg7P6qDLTxsELrT4mTcPnY+gNCHw7FrNOyuvQTWdQ774qBosGjZQdf0TDlbp
  CODECOV_TOKEN:
    secure: UOVS0YRMfLXSGzdaRiS7clmDNEBLTXNwg9HqYCBjEUygdb73+rCK4wyD3JA9Iifw
  COVERALLS_REPO_TOKEN:
    secure: PnlLEk9P32afw1f+VNgzMYQgnhAxqlatTUsT56Hv/XBffCtuR8L2iRYGHorDM5vX
matrix:
  fast_finish: true
cache:
  - packages
  - C:\Users\appveyor\.sonar\cache
  - C:\ProgramData\chocolatey\bin
  - C:\ProgramData\chocolatey\lib
  - C:\ProgramData\chocolatey\cache -> appveyor.yml
init:
  - cmd: choco upgrade sonarscanner-msbuild-netcoreapp2.0 -y --no-progress -c C:\ProgramData\chocolatey\cache
  # - cmd: choco upgrade coveralls.io --source https://dotnet.myget.org/F/dotnet-buildtools/api/v2 -y --no-progress -c C:\ProgramData\chocolatey\cache
  - cmd: git config --global core.autocrlf true
install:
  - cmd: git submodule -q update --init
  - cmd: dotnet restore --packages packages
  - ps: >-
      echo $env:APPVEYOR_BUILD_VERSION

      if($env:APPVEYOR_REPO_BRANCH -eq "develop"){
        if($env:CONFIGURATION -eq "Release"){
          Update-AppveyorBuild -Version "$env:APPVEYOR_BUILD_VERSION-dev"
        }
        else{
          Update-AppveyorBuild -Version "$env:APPVEYOR_BUILD_VERSION-debug"
        }
      }
build:
  project: Yggdrasil.sln
  parallel: true
  verbosity: minimal
for:
  -
    matrix:
      only:
        - configuration: Release
    before_build:
    - cmd: choco upgrade opencover.portable codecov -y --no-progress -c C:\ProgramData\chocolatey\cache
    - cmd: dotnet tool install --global coveralls.net
    - ps: >-
        if ($env:APPVEYOR_PULL_REQUEST_NUMBER){
          dotnet $env:SONAR_BINARY begin "/k:$env:PROJECT" /d:sonar.organization=$env:USERNAME /d:sonar.host.url="https://sonarcloud.io" /d:sonar.login=$env:SONAR_REPO_TOKEN /d:sonar.github.pullRequest=$env:APPVEYOR_PULL_REQUEST_NUMBER /d:sonar.github.repository=$env:APPVEYOR_REPO_NAME /d:sonar.github.oauth=$env:GITHUB_REPO_TOKEN /d:sonar.analysis.mode=preview
        }
        else {
          dotnet $env:SONAR_BINARY begin "/k:$env:PROJECT" /d:sonar.organization=$env:USERNAME /d:sonar.host.url="https://sonarcloud.io" /d:sonar.login=$env:SONAR_REPO_TOKEN
        }
    after_build:
      - ps: dotnet $env:SONAR_BINARY end /d:sonar.login=$env:SONAR_REPO_TOKEN
      - ps: 7z a "$env:PROJECT.zip" $env:APPVEYOR_BUILD_FOLDER\src\*\bin\Release\*\*.dll
      - ps: Push-AppveyorArtifact "$env:PROJECT.zip"
    test: off
  -
    matrix:
      only:
        - configuration: Debug
    build_script:
      - echo "Does not build here"
    before_test:
    - ps: >-
        if (Test-Path -Path .sonarqube){
          Remove-Item -Recurse -Force .sonarqube
        }

        if ($env:APPVEYOR_PULL_REQUEST_NUMBER){
          dotnet $env:SONAR_BINARY begin "/k:$env:PROJECT" /d:sonar.coverage.exclusions=tests/**/* /d:sonar.organization=$env:USERNAME /d:sonar.host.url=https://sonarcloud.io /d:sonar.cs.opencover.reportsPaths=$env:PROJECT.coverage.xml /d:sonar.login=$env:SONAR_REPO_TOKEN /d:sonar.github.pullRequest=$env:APPVEYOR_PULL_REQUEST_NUMBER /d:sonar.github.repository=$env:APPVEYOR_REPO_NAME /d:sonar.github.oauth=$env:GITHUB_REPO_TOKEN /d:sonar.analysis.mode=preview
        }
        else {
        dotnet $env:SONAR_BINARY begin "/k:$env:PROJECT" /d:sonar.coverage.exclusions=tests/**/* /d:sonar.organization=$env:USERNAME /d:sonar.host.url=https://sonarcloud.io /d:sonar.cs.opencover.reportsPaths=$env:PROJECT.coverage.xml /d:sonar.login=$env:SONAR_REPO_TOKEN
        }
    test_script:
    - ps: >-
        OpenCover.Console.exe -register:user -target:"dotnet.exe" -targetargs:"test tests/ForestTests --configuration Debug /p:DebugType=Full" "-output:$env:PROJECT.coverage.xml" -oldStyle -excludebyattribute:"*.ExcludeFromCodeCoverage*;*.TestSDKAutoGeneratedCode*" -filter:"+[*]$env:NAMESPACE.* -[*]$env:NAMESPACE.*Tests*.*" -hideskipped:all
    after_test:
    - ps: >-
        dotnet $env:SONAR_BINARY end /d:sonar.login=$env:SONAR_REPO_TOKEN

        csmacnz.coveralls --useRelativePaths --opencover --repoToken "$env:COVERALLS_REPO_TOKEN" Coverage.xml

        if ($env:APPVEYOR_PULL_REQUEST_NUMBER){
          codecov --file "$env:PROJECT.coverage.xml" --token "$env:CODECOV_TOKEN" --build "$env:APPVEYOR_BUILD_NUMBER" --branch "$env:APPVEYOR_REPO_BRANCH" --sha "$env:APPVEYOR_REPO_COMMIT" --slug "$env:APPVEYOR_REPO_NAME" --pr "$env:APPVEYOR_PULL_REQUEST_NUMBER"
        }
        else {
          codecov --file "$env:PROJECT.coverage.xml" --token "$env:CODECOV_TOKEN" --build "$env:APPVEYOR_BUILD_NUMBER" --branch "$env:APPVEYOR_REPO_BRANCH" --sha "$env:APPVEYOR_REPO_COMMIT" --slug "$env:APPVEYOR_REPO_NAME"
        }

        Push-AppveyorArtifact "$env:PROJECT.coverage.xml"
